-- Crear Tablas sin relaciones
CREATE TABLE ROLES (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY,
    nombre VARCHAR2(50) NOT NULL,
    PRIMARY KEY(id)
)

-- Crear Tablas con relaciones
CREATE TABLE PERMISOS (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY,
    id_rol NUMBER NOT NULL,
    leer NUMBER NOT NULL,
    escribir NUMBER NOT NULL,
    eliminar NUMBER NOT NULL,
    modificar NUMBER NOT NULL,
    tabla VARCHAR2(50),
    PRIMARY KEY(id),
    CONSTRAINT fk_rol FOREIGN KEY (id_rol) REFERENCES ROLES(id)
)

CREATE TABLE USUARIOS (
  id NUMBER GENERATED BY DEFAULT AS IDENTITY,
  id_rol NUMBER NOT NULL,
  nombre VARCHAR2(50) NOT NULL,
  email VARCHAR2(50) NOT NULL,
  contrasena VARCHAR2(50) NOT NULL,
  PRIMARY KEY(id),
  CONSTRAINT fk_rol_user FOREIGN KEY (id_rol) REFERENCES ROLES(id)
)

CREATE TABLE HORARIOS_USUARIOS (
  id NUMBER GENERATED BY DEFAULT AS IDENTITY,
  id_usuario NUMBER NOT NULL,
  nombre VARCHAR2(50) NOT NULL,
  PRIMARY KEY(id),
  CONSTRAINT fk_usuario_HORARIOS_USUARIOS FOREIGN KEY (id_usuario) REFERENCES USUARIOS(id)
)

CREATE TABLE MATERIAS (
  id NUMBER GENERATED BY DEFAULT AS IDENTITY,
  id_horario NUMBER NOT NULL,
  nombre VARCHAR2(50) NOT NULL,
  color VARCHAR2(50) NOT NULL,
  PRIMARY KEY(id),
  CONSTRAINT fk_horario_materia FOREIGN KEY (id_horario) REFERENCES HORARIOS_USUARIOS(id)
)

CREATE TABLE DETALLES_MATERIAS (
  id NUMBER GENERATED BY DEFAULT AS IDENTITY,
  id_materia NUMBER NOT NULL,
  descripcion VARCHAR2(50) NOT NULL,
  mostrar NUMBER NOT NULL,
  PRIMARY KEY(id),
  CONSTRAINT fk_materia_detalles FOREIGN KEY (id_materia) REFERENCES MATERIAS(id)
)

CREATE TABLE HORARIOS (
  id NUMBER GENERATED BY DEFAULT AS IDENTITY,
  id_materia NUMBER NOT NULL,
  dia VARCHAR2(1) NOT NULL,
  hora_incio VARCHAR2(5) NOT NULL,
  hora_fin VARCHAR2(5) NOT NULL,
  PRIMARY KEY(id),
  CONSTRAINT fk_materia_horarios FOREIGN KEY (id_materia) REFERENCES MATERIAS(id)
)
  
CREATE TABLE DETALLES_HORARIOS (
  id NUMBER GENERATED BY DEFAULT AS IDENTITY,
  id_horario NUMBER NOT NULL,
  descripcion VARCHAR2(50) NOT NULL,
  mostrar NUMBER NOT NULL,
  PRIMARY KEY(id),
  CONSTRAINT fk_horario_detalles FOREIGN KEY (id_horario) REFERENCES HORARIOS(id)
)

CREATE TABLE COMPARTIR_HORARIO (
  id NUMBER GENERATED BY DEFAULT AS IDENTITY,
  url_acesso VARCHAR2(50) NOT NULL, 
  id_horario NUMBER NOT NULL,
  PRIMARY KEY(id),
  CONSTRAINT fk_horario_compartir FOREIGN KEY (id_horario) REFERENCES HORARIOS_USUARIOS(id)
)

CREATE TABLE COMENTARIOS_HORARIO (
  id NUMBER GENERATED BY DEFAULT AS IDENTITY,
  id_horario NUMBER NOT NULL,
  id_usuario NUMBER NOT NULL,
  comentario VARCHAR2(255) NOT NULL,
  publicado DATE NOT NULL,
  PRIMARY KEY(id),
  CONSTRAINT fk_horario_comentarios FOREIGN KEY (id_horario) REFERENCES HORARIOS_USUARIOS(id)
)

-- Insertar roles
INSERT INTO ROLES (nombre) VALUES ('Administrador');
INSERT INTO ROLES (nombre) VALUES ('Profesor');
INSERT INTO ROLES (nombre) VALUES ('Estudiante');

-- Insertar permisos
INSERT INTO PERMISOS (id_rol, leer, escribir, eliminar, modificar, tabla) VALUES (1, 1, 1, 1, 1, 'USUARIOS');
INSERT INTO PERMISOS (id_rol, leer, escribir, eliminar, modificar, tabla) VALUES (2, 1, 1, 0, 1, 'MATERIAS');
INSERT INTO PERMISOS (id_rol, leer, escribir, eliminar, modificar, tabla) VALUES (3, 1, 0, 0, 0, 'HORARIOS');

-- Insertar usuarios
INSERT INTO USUARIOS (id_rol, nombre, email, contrasena) VALUES (1, 'Admin', 'admin@email.com', 'admin123');
INSERT INTO USUARIOS (id_rol, nombre, email, contrasena) VALUES (2, 'Profesor Juan', 'juan@email.com', 'profesor123');
INSERT INTO USUARIOS (id_rol, nombre, email, contrasena) VALUES (3, 'Estudiante Ana', 'ana@email.com', 'estudiante123');

-- Insertar horarios de usuarios
INSERT INTO HORARIOS_USUARIOS (id_usuario, nombre) VALUES (2, 'Horario Profesor Juan');
INSERT INTO HORARIOS_USUARIOS (id_usuario, nombre) VALUES (3, 'Horario Estudiante Ana');

-- Insertar materias
INSERT INTO MATERIAS (id_horario, nombre, color) VALUES (1, 'Matemáticas', 'Azul');
INSERT INTO MATERIAS (id_horario, nombre, color) VALUES (2, 'Historia', 'Rojo');

-- Insertar detalles de materias
INSERT INTO DETALLES_MATERIAS (id_materia, descripcion, mostrar) VALUES (1, 'Álgebra y Cálculo', 1);
INSERT INTO DETALLES_MATERIAS (id_materia, descripcion, mostrar) VALUES (2, 'Historia Universal', 1);

-- Insertar horarios
INSERT INTO HORARIOS (id_materia, dia, hora_incio, hora_fin) VALUES (1, 'L', '08:00', '10:00');
INSERT INTO HORARIOS (id_materia, dia, hora_incio, hora_fin) VALUES (2, 'M', '10:00', '12:00');

-- Insertar detalles de horarios
INSERT INTO DETALLES_HORARIOS (id_horario, descripcion, mostrar) VALUES (1, 'Clase en Aula 101', 1);
INSERT INTO DETALLES_HORARIOS (id_horario, descripcion, mostrar) VALUES (2, 'Clase en Aula 202', 1);

-- Insertar compartir horario
INSERT INTO COMPARTIR_HORARIO (url_acesso, id_horario) VALUES ('juan', 1);
INSERT INTO COMPARTIR_HORARIO (url_acesso, id_horario) VALUES ('ana', 2);

-- Insertar comentarios sobre horarios
INSERT INTO COMENTARIOS_HORARIO (id_horario, id_usuario, comentario, publicado) VALUES (1, 3, 'Muy buena clase de matemáticas', SYSDATE);
INSERT INTO COMENTARIOS_HORARIO (id_horario, id_usuario, comentario, publicado) VALUES (2, 3, 'La historia es interesante', SYSDATE);

CREATE OR REPLACE FUNCTION obtener_horario(p_url_acesso VARCHAR2)
RETURN SYS_REFCURSOR IS
    v_cursor SYS_REFCURSOR;
BEGIN
    OPEN v_cursor FOR
        SELECT 
            hu.nombre AS nombre_horario,
            m.nombre AS nombre_materia,
            m.color,
            h.dia,
            h.hora_incio,
            h.hora_fin,
            dh.descripcion AS detalle,
            ch.URL_ACESSO
        FROM COMPARTIR_HORARIO ch
        JOIN HORARIOS_USUARIOS hu ON ch.id_horario = hu.id
        JOIN MATERIAS m ON hu.id = m.id_horario
        JOIN HORARIOS h ON m.id = h.id_materia
        LEFT JOIN DETALLES_HORARIOS dh ON h.id = dh.id_horario
        WHERE ch.URL_ACESSO = p_url_acesso;
    
    RETURN v_cursor;
END obtener_horario;

-- Operación Eliminar Rol
BEGIN
    -- Iniciar la transacción
    SAVEPOINT inicio_transaccion;

    -- 1. Eliminar detalles de horarios relacionados con el rol
    DELETE FROM DETALLES_HORARIOS
    WHERE id_horario IN (
        SELECT h.id
        FROM HORARIOS h
        JOIN MATERIAS m ON h.id_materia = m.id
        JOIN HORARIOS_USUARIOS hu ON m.id_horario = hu.id
        JOIN USUARIOS u ON hu.id_usuario = u.id
        WHERE u.id_rol = :rol_id
    );

    -- 2. Eliminar horarios relacionados con el rol
    DELETE FROM HORARIOS
    WHERE id_materia IN (
        SELECT m.id
        FROM MATERIAS m
        JOIN HORARIOS_USUARIOS hu ON m.id_horario = hu.id
        JOIN USUARIOS u ON hu.id_usuario = u.id
        WHERE u.id_rol = :rol_id
    );

    -- 3. Eliminar detalles de materias relacionados con el rol
    DELETE FROM DETALLES_MATERIAS
    WHERE id_materia IN (
        SELECT m.id
        FROM MATERIAS m
        JOIN HORARIOS_USUARIOS hu ON m.id_horario = hu.id
        JOIN USUARIOS u ON hu.id_usuario = u.id
        WHERE u.id_rol = :rol_id
    );

    -- 4. Eliminar materias relacionadas con el rol
    DELETE FROM MATERIAS
    WHERE id_horario IN (
        SELECT hu.id
        FROM HORARIOS_USUARIOS hu
        JOIN USUARIOS u ON hu.id_usuario = u.id
        WHERE u.id_rol = :rol_id
    );

    -- 5. Eliminar compartir horario relacionados con el rol
    DELETE FROM COMPARTIR_HORARIO
    WHERE id_horario IN (
        SELECT hu.id
        FROM HORARIOS_USUARIOS hu
        JOIN USUARIOS u ON hu.id_usuario = u.id
        WHERE u.id_rol = :rol_id
    );

    -- 6. Eliminar comentarios de horario relacionados con el rol
    DELETE FROM COMENTARIOS_HORARIO
    WHERE id_horario IN (
        SELECT hu.id
        FROM HORARIOS_USUARIOS hu
        JOIN USUARIOS u ON hu.id_usuario = u.id
        WHERE u.id_rol = :rol_id
    );

    -- 7. Eliminar horarios de usuarios relacionados con el rol
    DELETE FROM HORARIOS_USUARIOS
    WHERE id_usuario IN (
        SELECT u.id
        FROM USUARIOS u
        WHERE u.id_rol = :rol_id
    );

    -- 8. Eliminar usuarios relacionados con el rol
    DELETE FROM USUARIOS
    WHERE id_rol = :rol_id;

    -- 9. Eliminar permisos relacionados con el rol
    DELETE FROM PERMISOS
    WHERE id_rol = :rol_id;

    -- 10. Finalmente, eliminar el rol
    DELETE FROM ROLES
    WHERE id = :rol_id;

    -- Confirmar la transacción si todo fue exitoso
    COMMIT;
EXCEPTION
    WHEN OTHERS THEN
        -- Si ocurre algún error, deshacer todos los cambios
        ROLLBACK TO inicio_transaccion;
        RAISE;  -- Relanzar la excepción para notificar el error
END;

-- Obtener información de los horarios

SELECT
    -- Información del horario compartido
    ch.url_acesso AS url_compartido,
    hu.nombre AS nombre_horario,

    -- Información de las materias
    m.id AS id_materia,
    m.nombre AS nombre_materia,
    m.color AS color_materia,
    dm.descripcion AS descripcion_materia,
    dm.mostrar AS mostrar_detalle_materia,

    -- Información de los horarios
    h.id AS id_horario,
    h.dia AS dia_horario,
    h.hora_incio AS hora_inicio,
    h.hora_fin AS hora_fin,
    dh.descripcion AS descripcion_horario,
    dh.mostrar AS mostrar_detalle_horario,

    -- Información de los comentarios
    chc.comentario AS comentario_horario,
    chc.publicado AS fecha_comentario,
    u.nombre AS nombre_usuario_comentario

FROM
    COMPARTIR_HORARIO ch
    JOIN HORARIOS_USUARIOS hu ON ch.id_horario = hu.id
    JOIN MATERIAS m ON hu.id = m.id_horario
    LEFT JOIN DETALLES_MATERIAS dm ON m.id = dm.id_materia
    JOIN HORARIOS h ON m.id = h.id_materia
    LEFT JOIN DETALLES_HORARIOS dh ON h.id = dh.id_horario
    LEFT JOIN COMENTARIOS_HORARIO chc ON hu.id = chc.id_horario
    LEFT JOIN USUARIOS u ON chc.id_usuario = u.id
WHERE
    ch.url_acesso = :url_acesso;